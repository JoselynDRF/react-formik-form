{"version":3,"sources":["components/ContactDetailsForm.tsx","components/DeliveryAddressForm.tsx","components/OrderSummary.tsx","components/PaymentDetailsForm.tsx","components/SuccessDialog.tsx","components/MultiStepForm.tsx","App.tsx","index.tsx"],"names":["ContactDetailsForm","Grid","container","spacing","item","xs","sm","type","id","name","label","component","TextField","disabled","required","fullWidth","FormControl","FormLabel","row","RadioGroup","FormControlLabel","value","control","Radio","color","Label","CheckboxWithLabel","title","initialValues","phoneNumber","email","arrivingType","allowNewsletter","validationSchema","Yup","DeliveryAddressForm","InputLabel","htmlFor","Select","MenuItem","firstName","lastName","address","additionalInfo","country","city","state","postalCode","saveAddress","useStyles","makeStyles","theme","listItem","padding","total","fontWeight","marginTop","getProducts","description","price","OrderSummary","values","classes","List","map","ListItem","key","className","ListItemText","primary","secondary","Typography","variant","reduce","Number","toFixed","getTotalAmount","Divider","gutterBottom","join","direction","detail","cardHolder","cardNumber","expiryDate","PaymentDetailsForm","cardDigits","rememberCardDetails","useState","open","setOpen","Dialog","maxWidth","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","window","location","reload","stepper","buttons","display","justifyContent","button","marginLeft","steps","activeStep","setActiveStep","showSuccess","setShowSuccess","CurrentStep","initValues","isLastStep","length","handleBack","prevActiveStep","submitForm","a","Promise","resolve","setTimeout","console","log","handleSubmit","onSubmit","SuccessDialog","Stepper","alternativeLabel","Step","StepLabel","createMuiTheme","palette","main","purpleColor","form","margin","ThemeProvider","Paper","elevation","align","MultiStepForm","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.f8d03c38.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  FormControl, FormControlLabel, FormLabel, Radio,\n} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { Field } from 'formik';\nimport { CheckboxWithLabel, RadioGroup, TextField } from 'formik-material-ui';\nimport * as Yup from 'yup';\n\nconst ContactDetailsForm = (): JSX.Element => (\n  <Grid container spacing={3}>\n    <Grid item xs={12} sm={6}>\n      <Field\n        type=\"text\"\n        id=\"phoneNumber\"\n        name=\"phoneNumber\"\n        label=\"Phone Number\"\n        component={TextField}\n        disabled={false}\n        required\n        fullWidth\n      />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      <Field\n        type=\"email\"\n        id=\"email\"\n        name=\"email\"\n        label=\"Email\"\n        component={TextField}\n        disabled={false}\n        required\n        fullWidth\n      />\n    </Grid>\n    <Grid item xs={12}>\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\"> Arriving type </FormLabel>\n        <Field row component={RadioGroup} name=\"arrivingType\">\n          <FormControlLabel value=\"standard\" control={<Radio color=\"primary\" />} label=\"Standard shipping\" />\n          <FormControlLabel value=\"express\" control={<Radio color=\"primary\" />} label=\"Express shipping\" />\n        </Field>\n      </FormControl>\n    </Grid>\n    <Grid item xs={12}>\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\"> Also want product updates with our newsletter? </FormLabel>\n        <Field\n          type=\"checkbox\"\n          id=\"allowNewsletter\"\n          name=\"allowNewsletter\"\n          Label={{ label: 'I want to keep me informed of products and services relevant to me' }}\n          component={CheckboxWithLabel}\n          disabled={false}\n        />\n      </FormControl>\n    </Grid>\n  </Grid>\n);\n\nContactDetailsForm.title = 'Contact Details';\n\nContactDetailsForm.initialValues = {\n  phoneNumber: '',\n  email: '',\n  arrivingType: 'standard',\n  allowNewsletter: false,\n};\n\nContactDetailsForm.validationSchema = Yup.object({\n  phoneNumber: Yup.string().required('required'),\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('required'),\n});\n\nexport default ContactDetailsForm;\n","import React from 'react';\nimport { FormControl, InputLabel, MenuItem } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { Field } from 'formik';\nimport { CheckboxWithLabel, Select, TextField } from 'formik-material-ui';\nimport * as Yup from 'yup';\n\nconst DeliveryAddressForm = (): JSX.Element => (\n  <Grid container spacing={3}>\n    <Grid item xs={12} sm={6}>\n      <Field\n        type=\"text\"\n        id=\"firstName\"\n        name=\"firstName\"\n        label=\"First name\"\n        component={TextField}\n        disabled={false}\n        required\n        fullWidth\n      />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      <Field\n        type=\"text\"\n        id=\"lastName\"\n        name=\"lastName\"\n        label=\"Last name\"\n        component={TextField}\n        disabled={false}\n        required\n        fullWidth\n      />\n    </Grid>\n    <Grid item xs={12}>\n      <Field\n        type=\"text\"\n        id=\"address\"\n        name=\"address\"\n        label=\"Address\"\n        component={TextField}\n        disabled={false}\n        required\n        fullWidth\n      />\n    </Grid>\n    <Grid item xs={12}>\n      <Field\n        type=\"text\"\n        id=\"additionalInfo\"\n        name=\"additionalInfo\"\n        label=\"Additional Information\"\n        component={TextField}\n        disabled={false}\n        fullWidth\n      />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      <FormControl required fullWidth>\n        <InputLabel htmlFor=\"country\"> Country </InputLabel>\n        <Field\n          id=\"country\"\n          name=\"country\"\n          component={Select}\n        >\n          <MenuItem value=\"US\"> USA </MenuItem>\n          <MenuItem value=\"PT\"> Portugal </MenuItem>\n          <MenuItem value=\"ES\"> España </MenuItem>\n        </Field>\n      </FormControl>\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      <Field\n        type=\"text\"\n        id=\"city\"\n        name=\"city\"\n        label=\"City\"\n        component={TextField}\n        disabled={false}\n        required\n        fullWidth\n      />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      <Field\n        type=\"text\"\n        id=\"state\"\n        name=\"state\"\n        label=\"State/Province/Region\"\n        component={TextField}\n        disabled={false}\n        fullWidth\n      />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      <Field\n        type=\"text\"\n        id=\"postalCode\"\n        name=\"postalCode\"\n        label=\"Zip / Postal code\"\n        component={TextField}\n        disabled={false}\n        required\n        fullWidth\n      />\n    </Grid>\n    <Grid item xs={12}>\n      <Field\n        type=\"checkbox\"\n        id=\"saveAddress\"\n        name=\"saveAddress\"\n        Label={{ label: 'Use this address for payment details' }}\n        component={CheckboxWithLabel}\n        disabled={false}\n      />\n    </Grid>\n  </Grid>\n);\n\nDeliveryAddressForm.title = 'Delivery Address';\n\nDeliveryAddressForm.initialValues = {\n  firstName: '',\n  lastName: '',\n  address: '',\n  additionalInfo: '',\n  country: '',\n  city: '',\n  state: '',\n  postalCode: '',\n  saveAddress: false,\n};\n\nDeliveryAddressForm.validationSchema = Yup.object({\n  firstName: Yup.string().required('required'),\n  lastName: Yup.string().required('required'),\n  address: Yup.string().required('required'),\n  country: Yup.string().required('required'),\n  city: Yup.string().required('required'),\n  postalCode: Yup.string().required('required'),\n});\n\nexport default DeliveryAddressForm;\n","import React, { Fragment } from 'react';\nimport { Divider } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormikValues } from 'formik';\nimport * as Yup from 'yup';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    padding: theme.spacing(1, 0),\n  },\n  total: {\n    fontWeight: 700,\n  },\n  title: {\n    marginTop: theme.spacing(2),\n    fontWeight: 700,\n  },\n}));\n\nconst getProducts = ({ arrivingType }) => [\n  { name: 'Product 1', description: 'Product 1 description', price: '10.00' },\n  { name: 'Product 2', description: 'Product 2 description', price: '5.50' },\n  { name: 'Product 3', description: 'Product 4 description', price: '20.99' },\n  { name: 'Shipping', description: arrivingType, price: '0.00' },\n];\n\nconst getTotalAmount = (values) => getProducts(values).reduce(\n  (total, { price }) => total + Number(price), 0,\n).toFixed(2);\n\nconst getAddressData = ({\n  address,\n  city,\n  state,\n  postalCode,\n  country,\n}) => [address, city, state, postalCode, country].join(', ');\n\nconst getPaymentsData = ({ cardHolder, cardNumber, expiryDate }) => [\n  { name: 'Card type', detail: 'Visa' },\n  { name: 'Card holder', detail: cardHolder },\n  { name: 'Card number', detail: cardNumber },\n  { name: 'Expiry date', detail: expiryDate },\n];\n\nconst OrderSummary = ({ values }: FormikValues): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <List>\n        {getProducts(values).map(({ name, description, price }) => (\n          <ListItem key={name} className={classes.listItem}>\n            <ListItemText primary={name} secondary={description} />\n            <Typography variant=\"body2\">\n              $\n              {price}\n            </Typography>\n          </ListItem>\n        ))}\n        <ListItem className={classes.listItem}>\n          <ListItemText primary=\"Total\" />\n          <Typography variant=\"subtitle1\" className={classes.total}>\n            $\n            {getTotalAmount(values)}\n          </Typography>\n        </ListItem>\n      </List>\n\n      <Divider />\n\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}> Shipping </Typography>\n          <Typography gutterBottom>\n            {values.firstName}\n            {' '}\n            {values.lastName}\n          </Typography>\n          <Typography gutterBottom>{getAddressData(values)}</Typography>\n        </Grid>\n        <Grid item container direction=\"column\" xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}> Payment details </Typography>\n          <Grid container>\n            {getPaymentsData(values).map(({ name, detail }) => (\n              <Fragment key={name}>\n                <Grid item xs={6}>\n                  <Typography gutterBottom>{name}</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography gutterBottom>{detail}</Typography>\n                </Grid>\n              </Fragment>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nOrderSummary.title = 'Order Summary';\nOrderSummary.initialValues = {};\nOrderSummary.validationSchema = Yup.object({});\n\nexport default OrderSummary;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { Field } from 'formik';\nimport { CheckboxWithLabel, TextField } from 'formik-material-ui';\nimport * as Yup from 'yup';\n\nconst PaymentDetailsForm = (): JSX.Element => (\n  <Grid container spacing={3}>\n    <Grid item xs={12} sm={6}>\n      <Field\n        type=\"text\"\n        id=\"cardHolder\"\n        name=\"cardHolder\"\n        label=\"Name on card\"\n        component={TextField}\n        disabled={false}\n        required\n        fullWidth\n      />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      <Field\n        type=\"text\"\n        id=\"cardNumber\"\n        name=\"cardNumber\"\n        label=\"Card number\"\n        component={TextField}\n        disabled={false}\n        required\n        fullWidth\n      />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      <Field\n        type=\"text\"\n        id=\"expiryDate\"\n        name=\"expiryDate\"\n        label=\"Expiry date\"\n        component={TextField}\n        disabled={false}\n        required\n        fullWidth\n      />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      <Field\n        type=\"text\"\n        id=\"cardDigits\"\n        name=\"cardDigits\"\n        label=\"CVV - Last three digits\"\n        component={TextField}\n        disabled={false}\n        required\n        fullWidth\n      />\n    </Grid>\n    <Grid item xs={12}>\n      <Field\n        type=\"checkbox\"\n        id=\"rememberCardDetails\"\n        name=\"rememberCardDetails\"\n        Label={{ label: 'Remember credit card details for next time' }}\n        component={CheckboxWithLabel}\n        disabled={false}\n      />\n    </Grid>\n  </Grid>\n);\n\nPaymentDetailsForm.title = 'Payment Details';\n\nPaymentDetailsForm.initialValues = {\n  cardHolder: '',\n  cardNumber: '',\n  expiryDate: '',\n  cardDigits: '',\n  rememberCardDetails: false,\n};\n\nPaymentDetailsForm.validationSchema = Yup.object({\n  cardHolder: Yup.string().required('required'),\n  cardNumber: Yup.string().required('required'),\n  expiryDate: Yup.string().required('required'),\n  cardDigits: Yup.string().required('required'),\n});\n\nexport default PaymentDetailsForm;\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormikValues } from 'formik';\n\nexport default ({ values }: FormikValues) : JSX.Element => {\n  const [open, setOpen] = useState(true);\n\n  const handleClose = () => {\n    setOpen(false);\n    window.location.reload();\n  };\n\n  return (\n    <Dialog open={open} maxWidth=\"sm\" fullWidth>\n      <DialogTitle id=\"success-dialog\"> Success </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          All set\n          {' '}\n          {values.firstName}\n          ! Check your email for a confirmation.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\"> Close </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Stepper from '@material-ui/core/Stepper';\nimport {\n  Form, Formik, FormikProps, FormikValues,\n} from 'formik';\nimport ContactDetailsForm from './ContactDetailsForm';\nimport DeliveryAddressForm from './DeliveryAddressForm';\nimport OrderSummary from './OrderSummary';\nimport PaymentDetailsForm from './PaymentDetailsForm';\nimport SuccessDialog from './SuccessDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default (): JSX.Element => {\n  const classes = useStyles();\n  const steps = [DeliveryAddressForm, ContactDetailsForm, PaymentDetailsForm, OrderSummary];\n  const [activeStep, setActiveStep] = useState(0);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const CurrentStep = steps[activeStep];\n  const { validationSchema } = CurrentStep;\n\n  const initialValues = steps.reduce((values, { initialValues: initValues }) => ({\n    ...values,\n    ...initValues,\n  }), {});\n\n  const isLastStep = () => activeStep === steps.length - 1;\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const submitForm = async (values: FormikValues) => {\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n    console.log(values); // eslint-disable-line\n    setShowSuccess(true);\n  };\n\n  const handleSubmit = async (values: FormikValues) => (isLastStep()\n    ? submitForm(values)\n    : handleNext());\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values }: FormikProps<FormikValues>) => (\n        <>\n          {showSuccess && <SuccessDialog values={values} />}\n\n          <Stepper activeStep={activeStep} className={classes.stepper} alternativeLabel>\n            {steps.map(({ title }) => (\n              <Step key={title}>\n                <StepLabel>{title}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n\n          <Form>\n            <CurrentStep values={values} />\n\n            <div className={classes.buttons}>\n              {activeStep !== 0 && (\n                <Button onClick={handleBack} className={classes.button}> Back </Button>\n              )}\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n              >\n                {isLastStep() ? 'Place Order' : 'Next'}\n              </Button>\n            </div>\n          </Form>\n        </>\n      )}\n    </Formik>\n  );\n};\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport purpleColor from '@material-ui/core/colors/purple';\nimport MultiStepForm from './components/MultiStepForm';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purpleColor[500],\n    },\n  },\n});\n\nconst useStyles = makeStyles(() => ({\n  form: {\n    maxWidth: 600,\n    margin: theme.spacing(4, 'auto'),\n    padding: theme.spacing(4),\n  },\n}));\n\nexport default (): JSX.Element => {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper className={classes.form} elevation={2}>\n        <Typography variant=\"h4\" align=\"center\"> Checkout </Typography>\n        <MultiStepForm />\n      </Paper>\n    </ThemeProvider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}